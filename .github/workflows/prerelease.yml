name: Prerelease

on: 
  # TODO change branch to develop
  push:
    branches:
      - feature/prerelease-builds
  pull_request:
    branches:
      - feature/prerelease-builds

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    name: Build for ${{ matrix.os }}
    if: "!contains(github.event.head_commit.message, 'skip-ci-prerelease')"
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Inject slug/short variables
      uses: rlespinasse/github-slug-action@v3.x

    - uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
    - name: Setup Rust cache
      uses: Swatinem/rust-cache@v1

    - name: Build release
      run: ./.build/build-release.sh # outputs ./name-needed
      shell: bash

    - name: Package release
      run: |
        OS=$(echo ${{ runner.os }} | tr '[:upper:]' '[:lower:]')
        BUILD=${{ env.GITHUB_RUN_NUMBER }}
        RELEASE_NAME="nn-pre-alpha-$BUILD-$OS"
        zip -vr $RELEASE_NAME.zip name-needed README.md LICENSE resources
      shell: bash

    - name: Publish release
      uses: "marvinpinto/action-automatic-releases@v1.1.1"
      with:
        repo_token: "${{ secrets.GITHUB_TOKEN }}"
        automatic_release_tag: "latest-pre-alpha"
        prerelease: true
        draft: true # TODO temporary
        title: "Pre-alpha #${{ env.GITHUB_RUN_NUMBER }}"
        files: |
          *.zip
